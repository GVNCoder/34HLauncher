<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Launcher.XamlThemes.Controls"
    xmlns:converters="clr-namespace:Launcher.XamlThemes.Controls.Converters">

    <SolidColorBrush x:Key="PageBackgroundTintBrush" Color="Black" />
    <SolidColorBrush x:Key="DialogTextBackgroundTintBrush" Color="Black" />
    <SolidColorBrush x:Key="DialogContentBackgroundTintBrush" Color="Black" />

    <converters:BrushTranslationConverter x:Key="brushTranslationConverter" />

    <!--  Base control style`s  -->
    <!--  Basic style for all other styles  -->
    <Style x:Key="BaseStyle" TargetType="{x:Type Control}">

        <Setter Property="FontFamily" Value="{StaticResource OpenSans}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

    </Style>

    <!--  Basic style for buttons  -->
    <Style
        x:Key="BaseButtonStyle"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type Button}" />

    <!--  Basic style for TextBlocks  -->
    <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">

        <Setter Property="FontFamily" Value="{StaticResource OpenSans}" />

    </Style>

    <!--  Acrylic Panel  -->
    <Style TargetType="{x:Type controls:AcrylicPanel}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:AcrylicPanel}">
                    <Grid ClipToBounds="True">

                        <!--  background tint layer  -->
                        <Grid.Background>
                            <PriorityBinding>
                                <Binding Path="Target.Background" RelativeSource="{RelativeSource AncestorType={x:Type controls:AcrylicPanel}}" />
                                <Binding Path="Target.Fill" RelativeSource="{RelativeSource AncestorType={x:Type controls:AcrylicPanel}}" />
                            </PriorityBinding>
                        </Grid.Background>

                        <!--  blur layer  -->
                        <Canvas>
                            <Canvas.CacheMode>
                                <BitmapCache RenderAtScale=".2" />
                            </Canvas.CacheMode>
                            <Rectangle
                                x:Name="rect"
                                Width="{Binding Target.ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type controls:AcrylicPanel}}}"
                                Height="{Binding Target.ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type controls:AcrylicPanel}}}"
                                ClipToBounds="False"
                                IsHitTestVisible="False">
                                <Rectangle.Fill>
                                    <VisualBrush
                                        AlignmentX="Left"
                                        AlignmentY="Top"
                                        Stretch="None"
                                        ViewboxUnits="Absolute"
                                        Visual="{Binding Target, RelativeSource={RelativeSource AncestorType={x:Type controls:AcrylicPanel}}}" />
                                </Rectangle.Fill>
                                <Rectangle.RenderTransform>
                                    <MultiBinding Converter="{StaticResource brushTranslationConverter}">
                                        <Binding Path="Target" RelativeSource="{RelativeSource AncestorType={x:Type controls:AcrylicPanel}}" />
                                        <Binding Path="Source" RelativeSource="{RelativeSource AncestorType={x:Type controls:AcrylicPanel}}" />
                                    </MultiBinding>
                                </Rectangle.RenderTransform>
                                <Rectangle.Effect>
                                    <BlurEffect Radius="100" />
                                </Rectangle.Effect>
                            </Rectangle>
                        </Canvas>

                        <!--  tint layer  -->
                        <Rectangle Fill="{Binding TintBrush, RelativeSource={RelativeSource AncestorType={x:Type controls:AcrylicPanel}}}" Opacity="{Binding TintOpacity, RelativeSource={RelativeSource AncestorType={x:Type controls:AcrylicPanel}}}">
                            <!--<Rectangle.Fill>
                                <SolidColorBrush Color="{Binding TintColor, RelativeSource={RelativeSource AncestorType={x:Type controls:AcrylicPanel}}}" />
                            </Rectangle.Fill>-->
                        </Rectangle>

                        <!--  noise layer  -->
                        <Rectangle Opacity="{Binding NoiseOpacity, RelativeSource={RelativeSource AncestorType={x:Type controls:AcrylicPanel}}}">
                            <Rectangle.Fill>
                                <ImageBrush
                                    ImageSource="../Resources/noise.png"
                                    Stretch="None"
                                    TileMode="Tile"
                                    Viewport="0,0,128,128"
                                    ViewportUnits="Absolute" />
                            </Rectangle.Fill>
                        </Rectangle>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style and template for the DataGridRowHeader  -->
    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>

                        <Border
                            x:Name="rowHeaderBorder"
                            Width="0"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0">

                            <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style and template for the DataGridColumnHeadersPresenter  -->
    <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                    <Grid>
                        <DataGridColumnHeader x:Name="PART_FillerColumnHeader" IsHitTestVisible="False" />
                        <ItemsPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Servers online counter style  -->
    <Style x:Key="CornerBorderLabel" TargetType="{x:Type Label}">

        <Setter Property="OverridesDefaultStyle" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">

                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="2">

                        <ContentPresenter
                            Margin="3,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Server details text box style  -->
    <Style x:Key="ServerDetailsTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />


        <Setter Property="AllowDrop" Value="False" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
        <Setter Property="FontSize" Value="10" />
        <!--<Setter Property="FontFamily" Value="Segoe UI" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Disable selection visual effect style  -->
    <Style x:Key="DisableSelectionContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="LightGray" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity=".05" Color="{DynamicResource Theme50Color}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlayerSelectionContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">

                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity=".075" Color="White" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MapSelectionContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">

                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity=".075" Color="White" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DllSelectorContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">

                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity=".075" Color="White" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity=".15" Color="White" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ComboBox TextBox template  -->
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border
            x:Name="PART_ContentHost"
            Background="{TemplateBinding Background}"
            Focusable="False" />
    </ControlTemplate>

    <!--  Style and template for the DataGrid  -->
    <Style x:Key="ServersListDataGridStyle" TargetType="{x:Type DataGrid}">

        <Setter Property="VerticalGridLinesBrush" Value="{x:Null}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{x:Null}" />
        <Setter Property="Background" Value="{x:Null}" />

        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />

        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">

                    <Border
                        x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">

                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">

                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <DataGridColumnHeadersPresenter
                                            x:Name="PART_ColumnHeadersPresenter"
                                            Grid.Column="1"
                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                        <ScrollContentPresenter
                                            x:Name="PART_ScrollContentPresenter"
                                            Grid.Row="1"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="2"
                                            CanContentScroll="{TemplateBinding CanContentScroll}" />

                                        <ScrollBar
                                            x:Name="PART_VerticalScrollBar"
                                            Grid.Row="1"
                                            Grid.Column="2"
                                            Maximum="{TemplateBinding ScrollableHeight}"
                                            Orientation="Vertical"
                                            ViewportSize="{TemplateBinding ViewportHeight}"
                                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Grid>

                                </ControlTemplate>
                            </ScrollViewer.Template>

                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        </ScrollViewer>

                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type controls:DialogControl}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DialogControl}">
                    <Grid>
                        <Rectangle x:Name="PART_Overlay">
                            <Rectangle.Fill>
                                <LinearGradientBrush Opacity=".6" StartPoint="1 0" EndPoint="0 1">
                                    <GradientStop Offset="0" Color="Black" />
                                    <GradientStop Offset="1" Color="Black" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <Border
                            x:Name="PART_ContentContainer"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:BusyIndicatorControl}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:BusyIndicatorControl}">
                    <Grid>
                        <Rectangle x:Name="PART_Overlay">
                            <Rectangle.Fill>
                                <LinearGradientBrush Opacity=".6" StartPoint="1 0" EndPoint="0 1">
                                    <GradientStop Offset="0" Color="Black" />
                                    <GradientStop Offset="1" Color="Black" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <Grid
                            x:Name="PART_Container"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="100" />
                            </Grid.RowDefinitions>

                            <Border
                                Grid.Row="0"
                                Margin="150,5"
                                Padding="10,5"
                                HorizontalAlignment="Center"
                                CornerRadius="2">
                                <Border.Background>
                                    <SolidColorBrush Opacity=".65" Color="Black" />
                                </Border.Background>

                                <TextBlock
                                    VerticalAlignment="Center"
                                    FontSize="14"
                                    Text="{TemplateBinding Title}"
                                    TextAlignment="Center" />

                            </Border>

                            <Ellipse
                                x:Name="PART_AnimationEllipse"
                                Grid.Row="1"
                                Width="5"
                                Height="5"
                                Fill="OrangeRed"
                                Opacity="1" />

                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DialogPrimaryStyle" TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        Name="PART_Border"
                        BorderBrush="Black"
                        BorderThickness="1"
                        CornerRadius="2">
                        <Border.Background>
                            <SolidColorBrush Color="#FA5437" />
                        </Border.Background>
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="White" />
                        </TextBlock.Foreground>

                        <TextBlock
                            Name="PART_ContentPresenter"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="{TemplateBinding FontSize}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <DiscreteColorKeyFrame KeyTime="0" Value="#FF6245" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <DiscreteColorKeyFrame KeyTime="0" Value="#FA5437" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DialogSecondaryStyle" TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        Name="PART_Border"
                        BorderBrush="Black"
                        BorderThickness="1"
                        CornerRadius="2">
                        <Border.Background>
                            <SolidColorBrush Color="#282828" />
                        </Border.Background>
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="White" />
                        </TextBlock.Foreground>

                        <TextBlock
                            Name="PART_ContentPresenter"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="{TemplateBinding FontSize}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <DiscreteColorKeyFrame KeyTime="0" Value="#383838" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <DiscreteColorKeyFrame KeyTime="0" Value="#282828" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type controls:EventsButton}" TargetType="{x:Type controls:EventsButton}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Opacity=".15" Color="#3EB5F1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:EventsButton}">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                    </ControlTemplate.Resources>

                    <Border
                        x:Name="PART_Border"
                        Padding="5,0"
                        Background="{TemplateBinding Background}"
                        CornerRadius="2">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Column="0">

                                <TextBlock
                                    FontFamily="{StaticResource Ionicons}"
                                    FontSize="16"
                                    Foreground="#EAEAEA"
                                    Text=""
                                    TextOptions.TextRenderingMode="Aliased" />

                                <Ellipse
                                    Width="8"
                                    Height="8"
                                    Margin="0,2,2,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Fill="#FF322C"
                                    StrokeThickness="1"
                                    Visibility="{TemplateBinding HasEvents,
                                                                 Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Ellipse.Stroke>
                                        <SolidColorBrush Color="#EAEAEA" />
                                    </Ellipse.Stroke>
                                </Ellipse>
                            </Grid>

                            <TextBlock
                                Grid.Column="1"
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Text}"
                                TextOptions.TextRenderingMode="Aliased" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity=".25" Color="#3EB5F1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>